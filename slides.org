* Python 101 Review

  We're still using and focusing on Python 2.7

** Why Python is BALLER

   - Python is generally very readable and regular - this makes code maintainable and transferable.
   - Python provides abstractions for terse expressions
   - Python is portable and has decent C integration
   - Python has packages for "everything"

** Types, variables, operators, conditionals, loops, functions

   - Python is [[http://c2.com/cgi/wiki?DynamicTyping][dynamically typed]] with twenty plus [[https://docs.python.org/2/library/stdtypes.html][built-in types]]
   - Python's grammar supports twenty one infix [[https://docs.python.org/2/reference/lexical_analysis.html#operators][operators]]

* Python 101 Review - Types

  - Truth types :: Booleans (True, False) and None
  - Numeric types :: int, float, long, complex
  - Iterator types :: iterator protocol defined in [[https://www.python.org/dev/peps/pep-0234/][PEP-0234]]
  - Generator types :: lazy iterators utilizing `yield` defined in [[https://www.python.org/dev/peps/pep-0255/][PEP-0255]]
  - Sequence types :: str, unicode, list, tuple, bytearray, buffer, xrange
  - Set types :: set, frozenset
  - Mapping types :: dict
  - View types :: dictview, memoryview
  - Context manager types :: context management protocol defined in [[https://www.python.org/dev/peps/pep-0343/][PEP-0343]]
  - Other types :: Modules, classes, functions, methods, code, type, null, ellipsis, NotImplemented

* Python 101 Review - Variables, literals, and assignment

  - Variables are names assigned to values
  - `=` is the assignment operator for an [[https://docs.python.org/2/reference/simple_stmts.html#assignment-statements][assignment statement]]
    : >>> apples = 10
  - Variables have types determined by their values at runtime
    : >>> int == type(apples)
    : True
  - Variables may change value and type throughout a program's run time
    : >>> apples = 'red'
    : >>> int == type(apples)
    : False
  - Variables may be unpacked from a sequence type or iterator
    : >>> count, color, cost_per_pound = (10, 'red', 6.69)
    : >>> count
    : 10
    : >>> color
    : 'red'
    : >>> cost_per_pound
    : 6.69

* Python 101 Review - Operators and Expressions

  - PEP 308 :: Conditional Expressions

* Python 101 Review - Functions

  - PEP-227 :: scope and closures

* Standard Python Functions

* Standard Python Libraries

* Generators and comprehensions

PEP-

* Modules and packages 

PEP-
PEP-440 - Versioning restrictions

* Command line arguments and interfaces 

* Tour of well known powerful libraries

PEP-8
PyFlakes
